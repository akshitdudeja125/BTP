never no_server_overload {    /* !([] (! ((server_busy[1]) && (server_busy[2])))) */
T0_init:
	do
	:: atomic { (! ((! ((server_busy[1]) && (server_busy[2]))))) -> assert(!(! ((! ((server_busy[1]) && (server_busy[2])))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never message_processing {    /* !(<> ((messages_processed>0))) */
accept_init:
T0_init:
	do
	:: (! (((messages_processed>0)))) -> goto T0_init
	od;
}
never server_usage {    /* !(<> (((client_served_by[1]>0)) || ((client_served_by[2]>0)))) */
accept_init:
T0_init:
	do
	:: (! ((((client_served_by[1]>0)) || ((client_served_by[2]>0))))) -> goto T0_init
	od;
}
